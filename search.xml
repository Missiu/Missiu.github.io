<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>低成本博客与多端同步笔记</title>
    <url>/c1262c9c/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<ol>
<li>本文档不是手把手教程</li>
<li>博客是使用hexo+next主题魔改搭建到github</li>
</ol>
<h2 id="我的需求">我的需求</h2>
<ol>
<li>编辑笔记方便，一般使用md语法，需要放图片在笔记里</li>
<li>有内容产出，需要很方便的发布博客，方便全局搜索，也方便查看</li>
<li>数据可靠，喜欢把数据放在本地，管理方便自由程度高</li>
<li>多端同步，很多时候在平板上也需要有笔记产出，主要电脑编辑，其他设备查看</li>
<li>数据备份很重要</li>
<li>长期使用需要低成本</li>
</ol>
<h2 id="解决思路">解决思路</h2>
<h3 id="笔记软件选择">笔记软件选择</h3>
<p>市面上很多笔记软件较为有代表性的：</p>
<ul>
<li>神中神Typora：我很长一段时间都是用的Typora，Typora支持所见即所得的编辑模式。插入图片时，可以在界面上直接粘贴，Typora会自己把图片复制到指定的目录，Typora还能粘贴网页上带格式的富文本，自动转换成Markdown，但是功能也就局限于md编辑的良好体验上，没有多平台，不能满足我的大多数需求</li>
<li>obsidian：插件丰富，拓展性强，具备了md 的 大部分功能，虽然粘贴自动转换成Markdown的功能没有Typora好用，但是无伤大雅，具备丰富的插件更能适配我的较高需求，而且多平台都有软件</li>
<li>印象笔记、语雀、Effie，等等等等，数据都没在本地，直接排除</li>
</ul>
<p>所以选择obsidian作为编辑笔记软件</p>
<h3 id="多端同步">多端同步</h3>
<p><strong>笔记编辑的图片问题：</strong><br>
之前使用图床+piclist进行图片上传，这样就不需要担心图片怎么上传到博客的问题，但是在图片的管理方面显得不太方便，较为杂乱，假如图片要更新，还需要在piclist里手动删除云端的图片，所以图片还是放在本地，随着博客一起上传</p>
<p><strong>多端同步成本问题：</strong><br>
obsidian有官方同步、有同步插件，等等，详细可以见：<a href="https://forum-zh.obsidian.md/t/topic/29995">对已知的obsidian同步方式进行整理</a>我这里综合考量使用的微力同步，免费，可以使用自己的私有节点进行同步，数据安全有保障，并且他是同步文件夹，这就意味着可以在其他端同步obsidian的主题、插件等，满足需求。</p>
<h3 id="数据备份">数据备份</h3>
<p>这里选择很宽泛，也有很多的云盘同步备份策略，甚至可以上nas，我这里选择github，通过git提交数据到github的私有库+百度云自动备份+隔几周手动备份到移动硬盘</p>
<h3 id="便捷部署到博客">便捷部署到博客</h3>
<p>很幸运我在搜索相关内容的时候，发现了一篇宝藏文章，不仅为我提供了思路，还给出了Hexo的魔改代码：<a href="https://www.paincker.com/note-and-blog-system/">构建自己的笔记博客系统（程序员版）</a>可以参考其操作以及开源库</p>
<h2 id="步骤">步骤</h2>
<h3 id="笔记软件配置">笔记软件配置</h3>
<ol>
<li>多端安装obsidan</li>
<li>安装插件：
<ol>
<li>Clear Unused Images ：清除不使用的图片</li>
<li>Consistent Attachments and Links ： 插件可以设置把文章的图片都放在平级的images目录中，如果移动笔记，对应的图片也会被移动 （<strong>必须</strong>）</li>
<li>Markdown prettifier ： 整理Markdown格式</li>
<li>Mousewheel Imagezoom ： 能够通过滚动来增加/减少图像的大小</li>
<li>Templater ： 用来配置博客的Front-matter，参考文章：<a href="https://itreefly.com/posts/e5113722.html">Hexo和Obsidian：让个人博客写作更加优雅、高效</a> （<strong>必须</strong>）</li>
<li>Unique attachments ：使图片链接的名称唯一（基于文件内容的哈希值）</li>
</ol>
</li>
</ol>
<h3 id="多端同步配置">多端同步配置</h3>
<ol>
<li>多端下载微力同步</li>
<li><a href="https://www.verysync.com/manual/users/start.html">配置同步</a></li>
</ol>
<h3 id="快捷发布博客">快捷发布博客</h3>
<ol>
<li>使用 <a href="https://github.com/jzj1993/PublishMarkdown">https://github.com/jzj1993/PublishMarkdown</a> 搭建hexo博客</li>
<li>先在本地跑起来，记得把测试文件移入<code>_posts</code>文件夹下</li>
<li>发布到github 参考：<a href="https://blog.soilove.cn/2020/06/14/blog-hexo-2-github-or-oss/#:~:text=Hexo%E4%BD%9C%E4%B8%BA%E4%B8%80%E4%B8%AA,%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%BF%AB%E9%80%9F%E5%8F%91%E5%B8%83%E3%80%82">使用Github或阿里云OSS托管你的Hexo博客</a></li>
<li>自定义hexo主题 参考：<a href="https://blog.csdn.net/as480133937/article/details/100138838">Hexo-Next 主题博客个性化配置超详细，超全面(两万字)</a></li>
<li>创建软连接，obsidian里的<code>Notes\blog </code>-&gt; 博客里<code> Blog\source\_posts</code> 这样编辑完文章只要把改文章拖到obsidian的blog目录下，就放在了博客文章目录里</li>
<li>创建<code>deploy.sh</code>的快捷链接，放到obsidian的一个目录里，点一下就可以增量部署到博客</li>
</ol>
<h3 id="补充">补充</h3>
<p>其他插件：</p>
<ul>
<li>笔记分享：可以用Pandoc插件的导出功能，把Markdown导出成HTML / Word / PDF文件分享给其他人。</li>
<li>笔记同步：在Obsidian的Terminal插件提供的窗口中运行git命令，把最新的博客push到私有git仓库。也可以选择用Obsidian Git插件把数据同步上去。在其他设备上通过git再把变更同步下来。</li>
</ul>
<p>参考文章：</p>
<ul>
<li><a href="https://forum-zh.obsidian.md/t/topic/29995">对已知的obsidian同步方式进行整理</a></li>
<li><a href="https://www.paincker.com/note-and-blog-system/">构建自己的笔记博客系统（程序员版）</a></li>
<li><a href="https://itreefly.com/posts/e5113722.html">Hexo和Obsidian：让个人博客写作更加优雅、高效</a></li>
<li><a href="https://blog.soilove.cn/2020/06/14/blog-hexo-2-github-or-oss/#:~:text=Hexo%E4%BD%9C%E4%B8%BA%E4%B8%80%E4%B8%AA,%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%BF%AB%E9%80%9F%E5%8F%91%E5%B8%83%E3%80%82">使用Github或阿里云OSS托管你的Hexo博客</a></li>
<li><a href="https://blog.csdn.net/as480133937/article/details/100138838">Hexo-Next 主题博客个性化配置超详细，超全面(两万字)</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>一篇6.5k字的CSS总结</title>
    <url>/72397b90/</url>
    <content><![CDATA[<h1>浅品 CSS</h1>
<h2 id="一、常用语法与基本概念">一、常用语法与基本概念</h2>
<h3 id="1、CSS-是什么">1、CSS 是什么</h3>
<p><em><strong>C</strong>ascading <strong>S</strong>tyle <strong>S</strong>heets（层叠样式表）</em><br>
CSS 是一门基于规则的语言 —— 你能定义用于你的网页中特定元素样式的一组规则。<br>
让你的网页更加美观。</p>
<ul>
<li>用来定义页面元素的样式</li>
<li>设置字体和颜色</li>
<li>设置位置和大小</li>
<li>添加动画效果</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">5em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>就像上面的代码一样，CSS 语法由<strong>选择器 (selector)</strong>+<strong>{}</strong> ，在大括号内部定义一个或多个形式为  <strong>属性 (property):值 (value);</strong>   的  <strong>声明 (declarations)</strong> 。</p>
<h3 id="2、css-的引入">2、css 的引入</h3>
<ol>
<li>内联样式(行内样式)</li>
</ol>
<p>要使用内联样式，你需要在相关的标签内使用样式(style) 属性。Style 属性可以包含任何 CSS 属性，<strong>缺点</strong>是缺乏整体性和规划性，不利于维护，维护成本高</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--内联--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;&quot;</span>&gt;</span>example<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ol start="2">
<li>内部样式</li>
</ol>
<p>当单个文档需要特殊的样式时，就应该使用内部样式表。你可以使用<code>&lt;style&gt;</code> 标签在文档头部定义内部样式表， <strong>缺点</strong> 是单个页面内的 CSS 代码具有统一性和规划性,便于维护，但是在多个页面之间容易混乱</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--嵌入 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-tag">li</span>&#123;&#125;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">p</span>&#123;&#125;</span></span><br><span class="line"><span class="css">&lt;style&gt;</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>外部样式(推荐)</li>
</ol>
<p>当样式需要应用于很多页面时，外部样式表将是理想的选择。在使用外部样式表的情况下，你可以通过改变一个文件来改变整个站点的外观。每个页面使用<link> 标签链接到样式表。<link> 标签在(文档的)头部</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--外链--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>其中<strong>外链</strong>（推荐)，<strong>嵌入</strong>（常常用与组件开发），<strong>内联</strong>（不推荐）就是 CSS 的生效地点不同而产生的不同使用方式</p>
<h3 id="3、选择器">3、选择器</h3>
<h4 id="3-1、-选择器">3.1、<strong><code>*</code></strong> 选择器</h4>
<p><strong>通配选择器</strong> 也叫全局选择器 ， 顾名思义，全局选择器可以与任何元素匹配，优先级最低，一般做样式初始化</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">margin</span>：<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="3-2、-标签-选择器">3.2、 <strong><code>标签</code></strong> 选择器</h4>
<p>也叫 元素选择器，HTML 文档中的元素，<code>p. b. div、 a. img、 body</code> 等。它选择的是页面上所有这种类型的标签,所以经常描述”共性”，无法描述某一个元素的“个性”</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h3</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: coral;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<h4 id="3-3、-id选择器">3.3、 <strong>id</strong>选择器</h4>
<p>在 HTML 中给组件绑定 id，在 CSS 中以#开头+id 名来达到选择效果，值得注意的是 id 值必须是唯一的，并且 id 不能以数字开头</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">p</span> id=&quot;exciting&quot;&gt;这里是id选择器代码展示&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line"></span><br><span class="line"> <span class="selector-id">#exciting</span>&#123;</span><br><span class="line">       <span class="attribute">background</span>:</span><br><span class="line">       border:</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h4 id="3-4、合并-选择器">3.4、<strong>合并</strong> 选择器</h4>
<p>可以使用 <code>,</code> 把不同的标签或者不同的类合并到同一个样式，可以减少代码重复；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>,</span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="3-5、-class-选择器">3.5、 <strong><code>class</code></strong> 选择器</h4>
<p>与 id 选择器类似但是是以 class 的属性名来决定，不同的是其中 class 的值可以出现多次，</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span></span><br><span class="line">  hello</span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;b  c&quot;</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">      <span class="selector-class">.a</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="css">      &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">      <span class="comment">/*先执行选择器b 再执行选择器c*/</span></span></span><br><span class="line"><span class="css">      <span class="selector-class">.b</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="css">      &#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.c</span> &#123;</span></span><br><span class="line"><span class="css">        fount-size: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">      &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="5-6、属性-选择器">5.6、<strong>属性</strong> 选择器</h4>
<ul>
<li>
<p><code>[attr]</code>表示带有以  <em>attr</em>  命名的属性的元素。</p>
</li>
<li>
<p><code>[attr=value]</code>表示带有以  <em>attr</em>  命名的属性，且属性值为_值_  的元素。</p>
</li>
<li>
<p><code>[attr~=value]</code>表示带有以  <em>attr</em>  命名的属性的元素，并且该属性是一个以空格作为分隔的值列表，其中至少有一个值为_值_。</p>
</li>
<li>
<p><code>[attr|=value]</code>表示带有以  <em>attr</em>  命名的属性的元素，属性值为“value”或是以“value-”为前缀（“”为连字符，Unicode 编码为 U+002D）开头。典型的应用场景是用来匹配语言简写代码（如 zh-CN，zh-TW 可以用 zh 作为 value）。<code>-</code></p>
</li>
<li>
<p><code>[attr^=value]</code>表示带有以  <em>attr</em>  命名的属性，且属性值是以 *value *开头的元素。</p>
</li>
<li>
<p><code>[attr$=value]</code>表示带有以  <em>attr</em>  命名的属性，且属性值是以 *value *结尾的元素。</p>
</li>
<li>
<p><code>[attr*=value]</code>表示带有以  <em>attr</em>  命名的属性，且属性值至少包含一个 *value *值的元素。</p>
</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 存在 title 属性的&lt;a&gt; 元素 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-attr">[title]</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: purple;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 存在 href 属性并且属性值匹配&quot;https://example.org&quot;的&lt;a&gt; 元素 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-attr">[href=<span class="string">&quot;https://example.org&quot;</span>]</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 存在 href 属性并且属性值包含&quot;example&quot;的&lt;a&gt; 元素 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-attr">[href*=<span class="string">&quot;example&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 存在 href 属性并且属性值结尾是&quot;.org&quot;的&lt;a&gt; 元素 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-attr">[href$=<span class="string">&quot;.org&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">font-style</span>: italic;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 存在 class 属性并且属性值包含以空格分隔的&quot;logo&quot;的&lt;a&gt;元素 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-attr">[class~=<span class="string">&quot;logo&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="5-7、-伪类">5.7、 <strong>伪类</strong></h4>
<p>CSS <strong><em>伪类</em></strong>  是添加到选择器的关键字，指定要选择的元素的特殊状态。例如，<code>：hover</code>  可被用于在用户将鼠标悬停在按钮上时改变按钮的颜色。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 所有用户指针悬停的按钮 */</span></span><br><span class="line"><span class="selector-tag">button</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="动态伪伪类">动态伪伪类</h5>
<ul>
<li><code>:link</code>元素被定义了超链接但并未被访问过</li>
<li><code>:visited</code>元素被定义了超链接并已被访问过</li>
<li><code>:active</code>元素被激活</li>
<li><code>:hover</code>鼠标悬停</li>
<li><code>:focus</code>元素获取焦点</li>
</ul>
<h5 id="UI-元素状态伪类">UI 元素状态伪类</h5>
<ul>
<li><code>:checked</code>选中的复选按钮或者单选按钮表单元素</li>
<li><code>:enabled</code>所有启用的表单元素</li>
<li><code>:disabled</code>所有禁用的表单元素</li>
</ul>
<h5 id="结构伪类选择器">结构伪类选择器</h5>
<ul>
<li><code>:fisrt-child</code>父元素的第一个子元素</li>
<li><code>:last-child</code>父元素的最后一个子元素的元素</li>
</ul>
<h4 id="5-8、关系选择器">5.8、<strong>关系</strong>选择器</h4>
<ol>
<li>后代选择器</li>
</ol>
<p>定义：选择<strong>所有</strong>被 E 元素包含的 F 元素，中间用空格隔开<br>
语法：<code>E F&#123;&#125;r</code></p>
<ol start="2">
<li>子代选择器</li>
</ol>
<p>定义：选择所有作为 E 元素的<strong>直接子元素</strong>F，对更深一层的元素不起作用，用<code>&gt;</code>表示<br>
语法： <code> E&gt;F&#123;&#125;</code></p>
<ol start="3">
<li>
<p>相邻兄弟选择器<br>
定义: 选择紧跟 E 元素后的 F 元素，用加号表示，选择<strong>相邻的第一个兄弟元素</strong><br>
语法： <code>E+F&#123;&#125;</code></p>
</li>
<li>
<p>通用兄弟选择器<br>
定义 ：选择 E 元素之后的<strong>所有兄弟元素</strong>F，作用于多个元素，用~隔开<br>
语法： <code>E~F&#123;&#125;</code></p>
</li>
</ol>
<h3 id="4、CSS-如何工作">4、CSS 如何工作</h3>
<p><img data-src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/622d94b4a8654015926c75a8e7e32a62~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p>
<h3 id="5、CSS-常用属性">5、CSS 常用属性</h3>
<h4 id="5-1、color（颜色属性）">5.1、<strong>color</strong>（颜色属性）</h4>
<ul>
<li>
<p><code>rgb（0,0,0）</code> 和十六进制 <code>#000000</code> <em>（#00 红 00 绿 00 蓝）</em> GRB 以红绿蓝三原色直接组合；缺点：<strong>不直接关联所见颜色</strong> ；</p>
</li>
<li>
<p><code>hsl（0,0%,0%）</code> HSL 通过色相，饱和度和亮度组合； <strong>hue</strong>（色相），范围：0-360 ； <strong>saturation</strong>（饱和度），范围：0-100% ； <strong>lightness</strong>（亮度），范围：0-100%</p>
</li>
<li>
<p><code>#00000000</code> <strong>Aloha</strong> 为颜色透明度类似纯色滤镜，范围<strong>0-1</strong>从透明到不透明； 可添加在 grb 和 hsl 后变成<strong>rgba</strong> <strong>shla</strong> 而新版的浏览器可不写直接加第四位，可<strong>直接在后添加两位作为透明</strong></p>
</li>
<li>
<p><code>opacity</code> ： 透明度，从不透明到透明 0–&gt;1 (非 color 的属性值，为了分类先放着)</p>
</li>
</ul>
<h4 id="5-2、-fount（字体属性）">5.2、 <strong>fount</strong>（字体属性）</h4>
<ul>
<li>
<p><code>font-family</code>字体主题（可以有多个属性值，浏览器逐级选设备上有的字体），其中存在<code>sans-serif</code>（通用字体）属性 ，还可以通过下面代码规则来自定义字体主题，但是可能会影响原有字体</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@font-face</span>&#123;</span><br><span class="line">    <span class="attribute">font-family</span>：&quot;字体名字&quot; <span class="attribute">src</span>：url（字体所在地址）</span><br><span class="line">    format（&quot;&quot;）&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><code>font-size</code>字体大小</p>
</li>
<li>
<p><code>font-style</code>字体样式 属性值为<code>italic</code>时为_斜体_</p>
</li>
<li>
<p><code>font-weight</code>字重 ;范围：100-900 ；其中 400 可以用 normal 替代，700 可以用 bold 替代 如果存在无法改变自重的情况时，可能是因为改字体仅有 normal 和 bold 两种属性</p>
</li>
<li>
<p><code> line-height</code>行高 ;推荐使用无单位的数字如 1.6 ，其表示为为自身字体大小的 1.6 倍，更明显直观 , 让行高等于高可以达到垂直居中的效果</p>
</li>
</ul>
<p>以上属性都可浓缩为 font 属性，简述时其他值为默认值 ，还有字符间距，首行缩进等</p>
<h4 id="5-3、background（背景属性）">5.3、<code>background</code>（背景属性）</h4>
<ul>
<li>
<p><code>background-color</code> 设置元素的背景图像</p>
</li>
<li>
<p><code>backcground-image: url(&quot;图片地址&quot;)</code> 设置背景图片</p>
</li>
<li>
<p><code>background-repeat</code> ：他有如下属性来设置背景图片</p>
<table>
<thead>
<tr>
<th>值</th>
<th>属性</th>
</tr>
</thead>
<tbody>
<tr>
<td>repeat</td>
<td>默认值</td>
</tr>
<tr>
<td>repeat-x</td>
<td>只向水平方向平铺</td>
</tr>
<tr>
<td>repeat-y</td>
<td>只向垂直方向平铺</td>
</tr>
<tr>
<td>no-repeat</td>
<td>不平铺</td>
</tr>
</tbody>
</table>
</li>
<li>
<p><code>background-size</code> 设置背景大小，他有如下值</p>
<table>
<thead>
<tr>
<th>值</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>length</td>
<td>设置背景图片的宽度和高度，第一个值宽度，第二个值高度,如果只是设置-个，第二个值 auto</td>
</tr>
<tr>
<td>percentage</td>
<td>计算相对位置区域的百分比，第一个值宽度，第二个值高度，如果只是设置-个，第二个值 auto</td>
</tr>
<tr>
<td>cover</td>
<td>保持图片纵横比并将图片缩放成完全覆盖背景区域的最小大小</td>
</tr>
<tr>
<td>contain</td>
<td>保持图片纵横比并将图像缩放成适合背景定位区域的最大大小</td>
</tr>
</tbody>
</table>
</li>
<li>
<p><code>background-position</code>该属性设置背景图像的起始位置，其默认值是: 0% 0%</p>
<table>
<thead>
<tr>
<th>值</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>left top</td>
<td>左上角.</td>
</tr>
<tr>
<td>left center</td>
<td>左中</td>
</tr>
<tr>
<td>left bottom</td>
<td>左下</td>
</tr>
<tr>
<td>…</td>
<td>…</td>
</tr>
</tbody>
</table>
</li>
</ul>
<h4 id="5-4、文本属性">5.4、文本属性</h4>
<ul>
<li><code>text-align</code>: 设置文本位置
<table>
<thead>
<tr>
<th>值</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>left</td>
<td>文本居左排列，默认值</td>
</tr>
<tr>
<td>right</td>
<td>把文本排列到右边</td>
</tr>
<tr>
<td>center</td>
<td>把文本排列到中间</td>
</tr>
</tbody>
</table>
</li>
<li><code>text-decoration</code> 规定添加到文本的修饰，下划线、上划线、 删除线等
<table>
<thead>
<tr>
<th>值</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>underline</td>
<td>定义下划线</td>
</tr>
<tr>
<td>overline</td>
<td>定义上划线</td>
</tr>
<tr>
<td>line-through</td>
<td>定义删除线</td>
</tr>
</tbody>
</table>
</li>
<li><code>ext-indent</code>文本块中首行文本的缩进</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">text-<span class="selector-tag">i</span> ndent: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="5-5、表格属性">5.5、表格属性</h4>
<ul>
<li>
<p>表格边框</p>
<p>指定 CSS 表格边框,使用 border 属性,不过都是双边框</p>
</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">table</span>，<span class="selector-tag">td</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>折叠边框<br>
border-collapse 属性设置表格的边框是否被折叠成一个单一的边框或隔开</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">table</span> &#123; <span class="attribute">border-collapse</span>:collapse; &#125;</span><br><span class="line"><span class="selector-tag">table</span>,<span class="selector-tag">td</span> &#123; <span class="attribute">border</span>: <span class="number">1px</span> solid black; &#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>表格宽度和高度<br>
width 和 height 属性定义表格的宽度和高度</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">table</span> &#123; wi dth:<span class="number">100%</span>; &#125;</span><br><span class="line"><span class="selector-tag">td</span> &#123; hei ght: <span class="number">50px</span>&#125;;</span><br></pre></td></tr></table></figure>
<ul>
<li>表格文字对齐</li>
</ul>
<p>表格中的文本对齐和垂直对齐属性</p>
<p><code>text- align</code>属性设置水平对齐方式，向左，右,或中心</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">td</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: right;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>垂直对齐属性设置垂直对齐<br>
<code>vertical-align</code>属性设置垂直对齐方式，向上，下,或中心</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">td</span> &#123;</span><br><span class="line">  <span class="attribute">vertical-align</span>: bottom;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>表格填充</li>
</ul>
<p>如果在表的内容中控制空格之间的边框，应使用 td 和 th 元素的填充属性</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">td</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>表格颜色<br>
下面的例子指定边框的颜色，和 th 元素的文本和背景颜色</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">tab1e,</span><br><span class="line"><span class="selector-tag">td</span>,</span><br><span class="line"><span class="selector-tag">th</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">td</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: green;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1>深入 CSS</h1>
<h2 id="二、基础布局和盒模型">二、基础布局和盒模型</h2>
<h3 id="1-选择器特异度">1.选择器特异度</h3>
<p>在给 HTML 元素应用样式时，多个选择器指向同一个元素，会应用优先级高的选择器，而选择器优先级高低是通过权重计算得到的</p>
<p>权重由<strong>高到低</strong>如下（为了更直观行让内样式加入其中）：</p>
<p>权重向量： (0, 0, 0, 0)</p>
<p>行内样式 &gt; ID 选择器 &gt; class/属性/伪类选择器 &gt; 类型 / 伪元素</p>
<p>示例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;menu&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;item1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;item1&quot;</span>&gt;</span>项目1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item2&quot;</span>&gt;</span>项目1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item3&quot;</span>&gt;</span>项目1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">  <span class="comment">/*权重向量计算示例*/</span></span></span><br><span class="line"><span class="css">  <span class="comment">/* (0, 1, 3, 1) */</span></span></span><br><span class="line"><span class="css">  <span class="selector-id">#container</span> <span class="selector-class">.menu</span><span class="selector-class">.menu</span> <span class="selector-tag">li</span><span class="selector-class">.item2</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">color</span>: <span class="number">#ff4757</span>;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">  <span class="comment">/* (0, 1, 2, 1) */</span></span></span><br><span class="line"><span class="css">  <span class="selector-id">#container</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)<span class="selector-class">.item2</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">color</span>: <span class="number">#7bed9f</span>;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">  <span class="comment">/* (0, 1, 1, 1) */</span></span></span><br><span class="line"><span class="css">  <span class="selector-id">#container</span> <span class="selector-tag">li</span><span class="selector-class">.item2</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">color</span>: <span class="number">#ffa502</span>;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">  <span class="comment">/* (0, 0, 1, 1) */</span></span></span><br><span class="line"><span class="css">  <span class="selector-tag">li</span><span class="selector-class">.item2</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">color</span>: <span class="number">#5352ed</span>;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">  <span class="comment">/* (0, 0, 1, 0) */</span></span></span><br><span class="line"><span class="css">  <span class="selector-class">.item2</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">color</span>: <span class="number">#ff6b81</span>;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>因为权重的不同，我们可以写一些基础样式在后面的开发中通过覆盖来达到相应效果来<strong>提高复用性</strong></p>
<h3 id="2-继承">2.继承</h3>
<p>谈到了选择器优先级问题就不得不提继承</p>
<p><strong>继承概念：</strong> 一般来说某些属性会自动继承其父元素的计算值，除非显式指定一个值；一般来说与文字，颜色等相关属性可以从父级继承的而盒模型相关的属性不可继承 <strong>注意：</strong> inherit 关键字允许显式的声明继承性，它对继承和非继承属性都生效；若父级没有某些相关属性值，则在继承中会使用<strong>初始值（initial）</strong> ，</p>
<h3 id="3-CSS-求值过程">3.CSS 求值过程</h3>
<p><img data-src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5d66e709b6784a838c7d5919cbd2e05e~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p>
<h3 id="4-什么是布局">4.什么是布局</h3>
<p>布局可以确定内容的大小和位置和算法；</p>
<p>三种布局方式：</p>
<ul>
<li><strong>常规流：</strong> 顾名思义计算有一些规则，其中有<strong>块级，行级，表格布局，FlexBox，Grid 布局</strong></li>
<li><strong>浮动流：</strong> 一些元素可做成浮动，如图片的图文置换</li>
<li><strong>绝对定位：</strong> 可以直接任意改变元素位置但且不会对常规流造成影响</li>
</ul>
<h3 id="5-盒模型">5.<strong>盒模型</strong></h3>
<p>CSS<a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/The_box_model">盒子模型</a>就是在网页设计中经常用到的 CSS 技术所使用的一种思维模型。 盒子模型（Box Modle）可以用来对元素进行布局，包括<strong>外边距(margin)</strong> ， <strong>边框(border)</strong> ，<strong>内边距(padding)</strong> ，<strong>和实际内容(content)</strong><br>
这几个部分。</p>
<h3 id="6-content-box">6.content-box</h3>
<img data-src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/986e09e8979343b18aa9dd1bb51fb890~tplv-k3u1fbpfcp-watermark.image?" alt="image.png" width="70%" />
<p>默认情况下，盒子的 <strong>宽度（width）</strong> 和 <strong>高度（height）</strong> 由 <strong>容量（content）</strong> 决定，如上图。其中<strong>宽度</strong> 为 content box 宽度，取值有长度、百分数、auto；百分数是相对于 conten box 的宽度，auto 是由浏览器根据其他属性确定，<strong>高度</strong> 类似，auto 是由内容高度计算得来，值得注意的是：只有当容器取固定值的时候，高度百分比才生效</p>
<p><strong>内边距（Padding）概念</strong></p>
<img data-src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fae58fa2be71453780ef0ee626e29e96~tplv-k3u1fbpfcp-watermark.image?" alt="image.png" width="50%" />
<p><strong>页边距</strong>相当于容器宽度；对于<strong>固定值</strong>， 当其只有一个值时对应每个边； 当其有 2 个值时值对应上下+左右； 有 4 个值时是<strong>顺时针</strong>对应由 padding-top —&gt; padding-left ；对于<strong>百分数</strong>，其取值是相对于容器宽度</p>
<p><strong>边框（border）</strong> 一般有三种 <code>none</code>不显示、 <code>solid</code>实线、<code>dashed</code>虚线； 可以通过<code>border-方向-宽度/颜色</code> 来组合可以调节粗细颜色等</p>
<p>例如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border</span> ： <span class="number">1px</span> solid <span class="selector-id">#ccc</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">border</span>—<span class="attribute">left</span> ：<span class="number">1</span> px solid <span class="selector-id">#ccc</span>;</span><br><span class="line"><span class="attribute">border</span>—<span class="attribute">right</span> ：<span class="number">2px</span> dotted red;</span><br><span class="line"></span><br><span class="line"><span class="attribute">border</span>—<span class="attribute">width</span> ： lpx <span class="number">2px</span> <span class="number">3px</span> <span class="number">4PX</span>&#x27;;</span><br><span class="line"><span class="attribute">border</span>—style ： solid;</span><br><span class="line"><span class="attribute">border</span>—<span class="attribute">color</span> ： green blue ;</span><br><span class="line"></span><br><span class="line"><span class="attribute">border</span>—<span class="attribute">left</span>—<span class="attribute">width</span> : <span class="number">3px</span>;</span><br><span class="line"><span class="attribute">border</span>—<span class="attribute">top</span>—<span class="attribute">color</span> :  <span class="number">#f00</span>;</span><br></pre></td></tr></table></figure>
<p><strong>外边距(margin)</strong> <code>margin-auto</code> 相同块级的 margin-left 和 margin-right 都为 auto 时 可实现水平居中 ; <code> margin collapse</code> 不同块级的 margin-top 和 margin-button 为相同值的时候，会使两个块级冲突；实际效果是在垂直方向上有折叠，会取两者中间的较大者，而不是简单加在一块。</p>
<h3 id="7-border-box">7.border-box</h3>
<img data-src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/843f3d1ab95d40e9a64507b40e29e1c1~tplv-k3u1fbpfcp-watermark.image?" alt="image.png" width="70%" />
<p><strong>提示</strong> 不同的 box 可通过<code> box-sizing：border-box；</code>设置，两者区别在于宽和高取值不同<br>
<em>从两图中可以清楚的看到取值区别</em></p>
<p>对于<code>border-box</code>如果指定了宽和高，可能会导致内容的溢出，可以使用<code>overflow</code>去控制溢出内容，其有的属性值：<code>visible</code>展示、 <code>hidden</code>隐藏、 <code>scroll</code>滚动，等</p>
<h3 id="8-块级盒子（Block-box）-和-行级盒子（Inline-box）">8.块级盒子（Block box） 和 行级盒子（Inline box）</h3>
<p>在 CSS 中我们广泛地使用两种“盒子” —— <strong>块级</strong> <strong>盒子</strong> (<strong>block box</strong>) 和  <strong>行级盒子</strong> (<strong>inline box</strong>) <strong>。</strong> 这两种盒子会在<strong>页面流</strong>（page flow）和<strong>元素之间的关系</strong>方面表现出不同的行为</p>
<p><strong>哪那些是块级盒子那些是内联盒子呢？</strong><br>
除非特殊指定，诸如标题 (<code>&lt;h1&gt;</code>等) 和段落 (<code>&lt;p&gt;</code>) 默认情况下都是块级的盒子。</p>
<p>而比如  <code>&lt;a&gt;</code>  元素、 <code>&lt;span&gt;</code>、 <code>&lt;em&gt;</code>  以及  <code>&lt;strong&gt;</code>  和<code>&lt;cite&gt;</code> 、 <code>&lt;code&gt;</code>都是默认处于  <code>inline</code>  状态的。</p>
<p>我们通过对盒子<code>display</code>属性的设置，比如  <code>inline</code>  或者  <code>block</code> 、<code>inline-block</code>、<code>none</code>（忽略）来控制盒子的外部显示类型。</p>
<p><strong>区别：</strong> 块级盒子摆放、属性的适用性、和 HTML 的关系 --&gt; 元素生成盒子 等存在不同。</p>
<img data-src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c70aa6c71bb1488996f5d10a44a0f5fc~tplv-k3u1fbpfcp-watermark.image?" alt="image.png" width="70%" />
<h2 id="三、常规流">三、常规流</h2>
<h3 id="1、行级排版上下文">1、行级排版上下文</h3>
<p>在只包含行级盒子的时候会创建行级<strong>IFC（lnline Formatting Context）</strong><br>
<strong>排版规则</strong></p>
<ul>
<li>盒子在一行内水平摆放</li>
<li>一行放不下时，换行显示</li>
<li>text-align 决定一行内盒子的水平对齐</li>
<li>vertical-align 决定一个盒子在行内的垂直对齐</li>
<li>避开浮动（float） 元素</li>
</ul>
<h3 id="2、块级排版上下文">2、块级排版上下文</h3>
<p>某些容器会创建一个<strong>BFC (Block Formatting Context)</strong><br>
比如：<br>
根元素 ，浮动、绝对定位、inline-block ，Flex 子项和 Grid 子项 ，overflow 值不是 visible 的块盒 ， display:flow-root；</p>
<p><strong>排版规则</strong></p>
<ul>
<li>盒子从到下摆放</li>
<li>垂直 margin 合并</li>
<li>BFC 内盒子的 margin 不会与外面的合并</li>
<li>BFC 不会和浮动元素重叠</li>
</ul>
<h3 id="3、Flex-Box">3、Flex Box</h3>
<p>Flex Box 被设计为一维布局模型，并作为一种可以在界面中的项目之间提供空间分布和强大对齐功能的方法，</p>
<p>可使用<code>display:flex</code>开启 flex 布局， 使用时 flex box 可以按行或按列排列，按<strong>行</strong>排列时分为水平方向的主轴和竖直方向的交叉轴，同理按<strong>列</strong>排列时与按行排列反之</p>
<ul>
<li>
<p><strong>主轴（main axis）</strong> 是沿着 flex 元素放置的方向延伸的轴（比如页面上的横向的行、纵向的列）。该轴的开始和结束被称为 <strong>main start</strong>  和 <strong>main end</strong>。</p>
</li>
<li>
<p><strong>交叉轴（cross axis）</strong> 是垂直于 flex 元素放置方向的轴。该轴的开始和结束被称为  <strong>cross start</strong>  和 <strong>cross end</strong>。</p>
</li>
</ul>
<p>改变主轴方向的布局可用<code>jastify-content: flex-start / flex-end / center / space-between / space-around / space-evenly /</code>如下图：</p>
<img data-src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b0d990f9fe654bdbb7b98c5759961489~tplv-k3u1fbpfcp-watermark.image?" alt="image.png" width="50%" />
<p>改变交叉轴方向的布局可用<code>align-items: flex-strat</code> / <code>flex-end</code> / <code>center </code>/<code>stretch</code> / <code>baseline</code>，相似的改变对应布局只是方向不同，如下图</p>
<img data-src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/06737ed495bd4ba3a637da8fc1d5a3e6~tplv-k3u1fbpfcp-watermark.image?" alt="image.png" width="50%" />
<p>也可改变主轴与交叉轴位置，<code>flex-direction: column</code> 即主轴变成了交叉轴，交叉轴变成了主轴，其他设置项不变。</p>
<p>非固定尺寸的子元素可以同过调整<code>Flex：</code>的属性调整空间的占比</p>
<img data-src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d9275a56d6814e1ba2040b9f11f24e42~tplv-k3u1fbpfcp-watermark.image?" alt="image.png" width="50%" />
<h3 id="4、Grid">4、Grid</h3>
<p>grid 是一个二维布局模型，通过划分格子（水平线+垂直线）来实现布局，可以同时控制行和列的部局方式</p>
<img data-src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3c411e043ee9432cb670d0264fccf884~tplv-k3u1fbpfcp-watermark.image?" alt="image.png" width="30%" />
<img data-src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4c37f39318074068b1fbf09a705e4085~tplv-k3u1fbpfcp-watermark.image?" alt="image.png" width="30%" />
<p>要开启 grid 布局只需要给外层容器设置<code>display：grid</code>即可；可以用 <code>grid-template-columns/rows：（行/列）</code> 指定宽度（fr 为 grid 布局专用单位）或者使用<code>gap</code>属性统一设置</p>
<img data-src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0fb28c267fcd47e488edbf1fdee95ede~tplv-k3u1fbpfcp-watermark.image?" alt="image.png" width="50%" />
<p>也可以用<code>drid-template-area：</code>进行设置，比如要使一个页面如下：头部和底部宽度占全屏，侧边占 1/3，内容占 2/3</p>
<img data-src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2e5d5b453ac74311bf8ceb9213a909ee~tplv-k3u1fbpfcp-watermark.image?" alt="image.png" width="50%" />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;layout&quot;&gt;</span><br><span class="line">    &lt;header&gt; 头 &#123;ß&lt;/header&gt;</span><br><span class="line">    &lt;aside&gt; 侧边栏 &lt;/aside&gt;</span><br><span class="line">    &lt;main&gt; 内容 &lt;/main&gt;</span><br><span class="line">    &lt;footer&gt; 底部 &lt;/footer&gt;</span><br><span class="line">&lt;/diV&gt;</span><br></pre></td></tr></table></figure>
<p>我们可以指定区域</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grid—template—areas ：</span><br><span class="line">    &quot;header header header&quot;</span><br><span class="line">    &quot;sidebar content content&quot;</span><br><span class="line">    &quot;footer footer footer&quot;</span><br><span class="line"></span><br><span class="line">header &#123; grid-area : header;</span><br><span class="line"> &#125;</span><br><span class="line">aside &#123;  grid-area : sideber;</span><br><span class="line"> &#125;</span><br><span class="line">main &#123;  grid-area : content;</span><br><span class="line"> &#125;</span><br><span class="line">footer &#123;</span><br><span class="line">grid—area ：footer;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<p>和 flex box 类似有水平方向的行轴有竖直方向的块轴可使用<code>align-items: center / end </code>等（格式同 flex），在对应的格子内实现对齐，</p>
<img data-src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c10e12daf1984908b533c52f83a71c41~tplv-k3u1fbpfcp-watermark.image?" alt="image.png" width="70%" />
<p>如果行轨道和列轨道<strong>小于</strong>容器还可以使用<code>align-content: center /</code>等（格式同 flex），对轨道进行对齐</p>
<img data-src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d2245d1252ff42cb81639983d82617b5~tplv-k3u1fbpfcp-watermark.image?" alt="image.png" width="70%" />
<h2 id="四、文档流">四、文档流</h2>
<p>文档流是文档中可显示对象在排列时所占用的位置/空间 ，例如:块元素自上而下摆放，内联元素，从左到右摆放</p>
<p>标准流里面的限制非常多，导致很多页面效果无法实现</p>
<ol>
<li>高矮不齐，底边对齐</li>
<li>空白折叠现象</li>
<li>无论多少个空格、换行、tab, 都会折叠为一个空格</li>
<li>如果我们想让 img 标签之间没有空隙，必须紧密连接</li>
</ol>
<p>怎么解决呢？</p>
<h2 id="五、浮动流（float）">五、浮动流（float）</h2>
<p>主要实现字图环绕，更多的用常规布局替代，可使用<code>float: left/right</code>开启，会脱离文档流，出现覆盖的情况；通俗点说就是浮动流都在新的一层，可以用来左对齐，或者右对齐</p>
<h2 id="六、绝对定位">六、绝对定位</h2>
<p><strong>position 属性</strong></p>
<ul>
<li>
<p><strong>static</strong> 默认值 ， 非定位元素，参与常规流的布局</p>
</li>
<li>
<p><strong>relative</strong>也会产生占用空间，相对自身原本位置偏移 ，不脱离文档流</p>
</li>
<li>
<p><strong>absolute</strong> 完全脱离，不占空间，绝对定位 ，相对非 static 祖先元素定位</p>
</li>
<li>
<p><strong>fixed</strong>相对于视囗绝对定位</p>
</li>
</ul>
<p><strong>温馨提示</strong></p>
<p>设置定位之后，相对定位和绝对定位他是相对于具有定位的父级元素进行位置调整，如果父级元素不存在定位，则继续向上逐级寻找，直到顶层文档</p>
<p>说人话就是：如果含有 position 属性的大盒子里面有一个也含有 position 属性的小盒子，那么小盒子会跟着大盒子一起移动</p>
<p>那么就引出了一个小知识：</p>
<p><strong><code>Z-index</code></strong></p>
<p>zindex 属性设置元素的堆叠顺序，属性值为 number（1、2、3…）。拥有更高堆叠顺序的元素总是会处于堆叠顺序较低的元素的前面，那么谁上谁下就不一定了（doge）</p>
<h2 id="七、CSS3-新特性">七、CSS3 新特性</h2>
<h3 id="1、圆角效果">1、圆角效果</h3>
<p>使用<code>border-radius</code>属性即可，属性值可以调节圆角度数</p>
<ul>
<li>四个值:第一个值为左上角，第二个值为右上角,第三个值为右下角，第四个值为左下角（<strong>左上------&gt;左下，顺时针</strong>）</li>
<li>三个值:第一个值为左上角,第二个值为右上角和左下角,第三个值为右下角（<strong>不建议使用</strong>）</li>
<li>两个值:第一个值为左上角与右下角，第二个值为右上角与左下角（<strong>对角</strong>）</li>
<li>一个值:四个圆角值相同</li>
</ul>
<h3 id="2、阴影">2、阴影</h3>
<p><code>box-shadow</code>向框添加一个或多个阴影。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">box-shadow</span>: h-shadow v-shadow b1ur color;</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>值</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>h-shadow</td>
<td>必选，水平阴影的位置</td>
</tr>
<tr>
<td>v-shadow</td>
<td>必选，垂直阴影的位置</td>
</tr>
<tr>
<td>blur</td>
<td>可选，模糊距离</td>
</tr>
<tr>
<td>color</td>
<td>可选，阴影的颜色</td>
</tr>
</tbody>
</table>
<h3 id="3、-keyframes创建动画">3、<code>@keyframes</code>创建动画</h3>
<p>动画是使元素从一种样式逐渐变化为另一种样式的效果</p>
<p>可以改变任意多的样式任意多的次数，用百分比来规定变化发生的时间，或用关键词&quot;from&quot;和&quot;to&quot;，等同于 0%（开始）和 100%（完成）</p>
<p>使用<code>@keyframes</code>规则,你可以创建动画</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> name &#123;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">from</span> |<span class="number">0%</span>&#123;</span><br><span class="line">  css样式</span><br><span class="line">&#125;</span><br><span class="line">percent&#123;</span><br><span class="line">  css样式</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">to</span>|<span class="number">100%</span>&#123;</span><br><span class="line">  css样式</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>name</code>:动画名称,开发人员自己命名;</p>
<p><code>percent</code>:为百分比值,可以添加多个百分比值;</p>
<h3 id="4、animation执行动画">4、<code>animation</code>执行动画</h3>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">animation</span>: name duration timi ng-function delay iteration-count di recti on;</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>值</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>name</td>
<td>设置动画的名称</td>
</tr>
<tr>
<td>duration</td>
<td>设置动画的持续时间</td>
</tr>
<tr>
<td>timing-function</td>
<td>设置动画效果的速率</td>
</tr>
<tr>
<td>delay</td>
<td>设置动画的开始时间(延时执行)</td>
</tr>
<tr>
<td>iteration-count</td>
<td>设置动画循环的次数，infinite 为无限次数的循环</td>
</tr>
<tr>
<td>direction</td>
<td>设置动画播放的方向： normal（正向） 和 alternate（反向）</td>
</tr>
<tr>
<td>animation-play-state</td>
<td>控制动画的播放状态: running 代表播放， 而 paused 代表停 止播放</td>
</tr>
</tbody>
</table>
<p>timing-function 的值为：</p>
<ul>
<li>ease 逐渐变慢(默认)</li>
<li>linear 匀速</li>
<li>ease-in 加速</li>
<li>ease-out 减速</li>
<li>ease-in-out 先加速后减速</li>
</ul>
<p>例子：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;animation&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.animation</span> &#123;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">	<span class="attribute">background</span>-coor: red;</span><br><span class="line">	<span class="attribute">animation</span>: anima <span class="number">5s</span> linear <span class="number">5s</span> infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.animation</span>: hover &#123;</span><br><span class="line">	animation-play- state: paused;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> anima &#123;</span><br><span class="line"><span class="number">0%</span> &#123;</span><br><span class="line"><span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">50%</span> &#123;</span><br><span class="line"><span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">100%</span> &#123;</span><br><span class="line"><span class="attribute">background-color</span>: b1ueviolet;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="5、媒体查询">5、媒体查询</h3>
<ul>
<li>媒体查询能使页面在不同在终端设备下达到不同的效果</li>
<li>媒体查询会根据设备的大小自动识别加载不同的样式</li>
</ul>
<ol>
<li>设置 meta 标签</li>
</ol>
<p>使用设备的宽度作为视图宽度并<strong>禁止初始的缩放</strong>。在<code>&lt;head&gt;</code>标签里加入这个 meta 标签。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;meta name=&quot;viewport&quot;</span><br><span class="line">      <span class="attribute">content</span>=&quot;<span class="attribute">width</span>=device-<span class="attribute">width</span>， <span class="attribute">initial</span>-scale=<span class="number">1</span>, maxi mum-</span><br><span class="line">scale=<span class="number">1</span>，user-scalab1e=no&quot;&gt;</span><br></pre></td></tr></table></figure>
<img data-src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/19265bcddad147bc8a8dd41fb7e6e3d0~tplv-k3u1fbpfcp-watermark.image?" alt="image.png" width="100%" />
<ol start="2">
<li>语法<br>
<code>max-width</code>最大宽度 <code>min-width</code>最小宽度</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 可视为手机端 */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: aqua;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 可视为iPad端*/</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">768px</span>) <span class="keyword">and</span> (max <span class="attribute">-width</span>: <span class="number">996px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: chartreuse;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*可视为电脑端*/</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">996px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>以上只是控制背景颜色，还可以更改标签是否显示等</p>
<h3 id="6、-雪碧图">6、 雪碧图</h3>
<p>CSS Sprite 也叫 CSS 精灵图、CSS 雪碧图，是一种网页图片应用处理方式。它允许你将一个页面涉及到的所有零星图片都包含到一张大图中去</p>
<p>最常见于表情，比如：</p>
<p><img data-src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/82dd521c29de4668ab6bfa34c85bb67d~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p>
<p><strong>优点</strong></p>
<ul>
<li>减少图片的字节</li>
<li>减少网页的 http 请求,从而大大的提高页面的性能</li>
</ul>
<p><strong>原理</strong></p>
<ul>
<li>通过 background-image 引入背景图片</li>
<li>通过 background-position 把背景图片移动到自己需要的位置</li>
</ul>
<p>示例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icon1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icon2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.icon1</span> &#123;</span><br><span class="line">   // 改变 <span class="selector-tag">i</span> 标签为块级元素</span><br><span class="line">    <span class="attribute">display</span>: b1ock;</span><br><span class="line">    //引入有很多标签的大图片</span><br><span class="line">    <span class="attribute">background</span>- image: <span class="built_in">ur1</span>(<span class="number">1</span>. png);</span><br><span class="line">    //调整大图片的位置，直到得到完整的所需表情</span><br><span class="line">    <span class="attribute">background-position</span>: -<span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">    // <span class="selector-tag">i</span> 组件的宽高</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">45px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">70px</span>;</span><br><span class="line"><span class="selector-class">.icon2</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: b1ock;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">ur1</span>(<span class="number">1</span>. png);</span><br><span class="line">    <span class="attribute">background-position</span>: -<span class="number">93px</span> -<span class="number">84px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">45px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">70px</span>;</span><br></pre></td></tr></table></figure>
<h3 id="7、字体图标">7、字体图标</h3>
<p>我们会经常用到一些图标。但是我们在使用这些图标时，往往会遇到失真的情况,而且图片数量很多的话，页面加载就越慢。所以,我们可以使用字体图标的方式来显示图标，既解决了失真的问题，也解决了图片占用资源的问题</p>
<p><strong>优点</strong></p>
<ul>
<li>轻量性:加载速度快,减少 http 请求</li>
<li>灵活性:可以利用 CSS 设置大小颜色等</li>
<li>兼容性:网页字体支持所有现代浏览器，包括 IE 低版本</li>
</ul>
<p>使用字体图标</p>
<ol>
<li>进入<a href="https://www.iconfont.cn/">阿里巴巴矢量图标库</a>注册账号并登录</li>
<li>选取图标或搜索图标</li>
<li>添加购物车</li>
<li>下载代码</li>
<li>添加到项目里</li>
<li>选择 font-class 引用</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./font/iconfont.css&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>7.挑选相应图标并获取类名，应用于页面:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-xxx(地址) xxx(使用时大小默认) &quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1>总结</h1>
<p>CSS 目前已经大致更新完善了，但是还是会更新以后遇到的新知识，也有在 b 站学习知识，感谢您的阅读和赞赏~!</p>
<p><strong>本文如有错误欢迎纠正指正! <a href="https://link.juejin.cn/?target=https%3A%2F%2Fp3-juejin.byteimg.com%2Ftos-cn-i-k3u1fbpfcp%2Fe0069c4ff46a449ba432e2d1a89438fb~tplv-k3u1fbpfcp-zoom-1.image" title="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e0069c4ff46a449ba432e2d1a89438fb~tplv-k3u1fbpfcp-zoom-1.image">😊</a></strong></p>
<h3 id="补充：">补充：</h3>
<p>选择器——<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors">知识充电</a></p>
<p>CSS 属性——<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/attr">知识充电</a></p>
<p>CSS 如何工作——<a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/First_steps/How_CSS_works">知识充电</a></p>
<p>CSS 文档——<a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS">知识充电</a></p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>CSS</tag>
        <tag>前端</tag>
      </tags>
  </entry>
</search>
